# ===================== #
# tkl disambiguator #
# ===================== #

# Alphabet below must be all multichar symbols used in all rules
STRICT-TAGS +=
    # Tags from lexicon
    N V A Prop Adv Num CC CS Interj
    Emph Prf Rom
    Abbr ACR Pr Pron
    Pers Det Dem Refl Recipr Poss Interr
    Nom Acc Gen Dat Instr
    Msc Fem Neu
    Sg Pl
    Def Indef
    Cmp Superl
    Prs Prt
    1Sg 2Sg 3Sg
    Inf Neg
    Pcle Pre
    PrfPrc PrsPrc
    Ind Imp Sbj Sup
    Cmpnd
    CLB PUNCT LEFT RIGHT
    Guess
    Post
    # Tags used in syntax
    @<SUBJ @SUBJ> @<OBJ @<IOBJ @OBJ> @IOBJ>
    @+FMAINV @-FMAINV
    @<ADVL @ADVL> @ADVL
    @CNP @CVP
    @INTERJ
    @X
    ;

#OPTIONS += no-inline-sets ;

# ========== #
# Delimiters #
# ========== #


DELIMITERS = "<.>" "<!>" "<?>" "<¶>" ;



# ============= #
# Tags and sets #
# ============= #


# ========
   SETS
# ========

LIST BOS = (>>>) (<s>);
LIST EOS = (<<<) (</s>); # vislcg and CG-2 together.

# Sets
# ====

LIST V = V ;
LIST N = N ;
LIST Pr = Pr ;
LIST Inf = Inf ;
LIST Prop = Prop ;
LIST Pron = Pron ;
LIST Det = Det ;
LIST Adv = Adv ;
LIST CC = CC ;
LIST CS = CS ;
LIST Interj = Interj ;
LIST Num = Num ;
LIST Rom = Rom ;
LIST Dem = Dem ;
LIST Emph = Emph ;
#LIST Pcle = Pcle ;

LIST verbalparticle = "kā" "koi" ;
LIST TE = "te" ;
LIST AU = "au" ;
LIST IA = "ia" ;
LIST KO = "ko" ;

SET WORD = N | V | A | Pr | Pron | Det | Adv | CC | CS | Interj | Num | ("\?") ;

SET NP = Det | N | Dem | Pron ;
SET PRE-N-POS        = A | Pcle | Pre ;
SET NOT-PRE-N    = WORD - PRE-N-POS ;

LIST PRE-V-MOD = "mātua" ;
#SET PRE-N-MOD = 

LIST DIR-PCLE = "mai" "atu" "ake" "ifo" ;

SECTION

#   ======== #
#!! SECTION  #
#   ======== #

# No context rules
REMOVE Rom IF (0 ("i")); # no roman i
REMOVE N IF (0 ("i")); # no letter i

# Lexical rules

SELECT:ataV V IF (0 ("ata"))(1 V);

SELECT:īPrs V IF (0 ("ī"));
SELECT:iPr Pr IF  (0 ("i"))(1 NP);

SELECT:kīN V IF (0 ("kī")); # The loanword key
SELECT:kiPr Pr IF  (0 ("i"))(1 NP);


SELECT:ia1 Emph IF (-1 N)(0 ("ia"));
REMOVE:ia2 Emph IF (0 ("ia"));

SELECT:iaPron Pron IF (-1 V)(0 ("ia"))(NOT 1 N);

# ō

REMOVE Pr IF (-1 N)(0 ("ō"))(NOT 1 NP);

# he / hē (Det he atu a shipjack, V Neg Ko au e hē fano I will not go, V hē go astray, N hē grasshopper
SELECT:heNeg Neg IF (0 ("hē"))(1 V);
SELECT:heDet Det IF (0  ("hē"))(1 NP);
REMOVE Neg IF (0  ("hē") + V)(1 V);
# wait with rule for the grasshopper until it appears

# ke / kē
SELECT:keCS CS IF (-1 N)(0 ("ke"))(1 V);
SELECT:kePron Pron IF (NOT -1 N)(0 ("kē"))(1 V);

# ko
REMOVE Pron IF (0 ("ko"))(NOT 1 V);

# mā
REMOVE ("ma") IF (0 ("mā"));
REMOVE:maPron Pr IF (0 ("mā") + Pron)(1C V);
REMOVE:maPr Pron IF (0 ("mā") + Pr)(-1 V OR N)(1 NP);
REMOVE:maN Pron (0 ("mā") + N)(-1 Pron);


# NP

REMOVE:PNP V IF (-1C Pr)(0 N);

# VP

SELECT V IF (-1 V + Prf OR V + Prs);
SELECT:VV V IF (1C V) ;


# Propernoun

SELECT:prop Prop IF (NOT -1 BOS);


SELECT Pcle IF (0 IA + Pcle)(1 Prop);
SELECT Emph IF (-1 N)(0 IA + Pcle + Emph);

SELECT Pcle IF (0 KO)(1 TE);

# Verbs

REMOVE V IF 
SELECT:kaakoi V IF (-1 verbalparticle);

REMOVE:te V IF (0 TE);

SELECT:auV V IF (0 AU)(1 Dem OR Det);
# E hē au te lou ki te fuāulu

REMOVE:au V IF (0 AU)(1 N);


#   Preposition

#REMOVE "Pcle" IF (0 Pr)(1 Dem)(2 N);

REMOVE:notPrPron Pr IF (1 Pron OR Prop);
SELECT Pr IF (0 Pr)(1 Dem)(2 N) ;
SELECT Pr IF (1C N);

REMOVE Pr IF (0 V)(NOT 1 NP OR Pcle);
# e tatalo



SELECT Det IF (0 Det)(1 N);
# Ko ai te tino tē?: W ho is this (or that) man?

REMOVE Det IF (NEGATE *1 N BARRIER NOT-PRE-N);
SELECT Det IF (*1 N BARRIER NOT-PRE-N);

SELECT Pcle IF (1 Det OR N);

SELECT Det IF (-1 Pr)(2 N) ;

# Nouns 
SELECT:NP N IF (-1C Det OR Poss);

REMOVE:maN N (-1 CLB)(0 ("mā"));

REMOVE:PrPr Pr IF (1C Pr);


# Late lexical rules

# e
SELECT:ePrs Prs IF (0 ("e"))(1 V);
SELECT:ePr Pr IF  (0 ("e"))(1 NP);

REMOVE:oi N IF (0 ("oi") + CC);

# Late preposition - noun rule

REMOVE N IF (0 Pr)(1 NP OR Pcle);
REMOVE Pr IF (-1C Pr)(0 N);

# Late verb rules

SELECT:dirverb V IF (1 DIR-PCLE);
SELECT:dirpcle Pcle IF (-1 V)(0 DIR-PCLE);

AFTER-SECTIONS

# last resort rules

